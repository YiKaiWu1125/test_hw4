name: CI

on: [push]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory: ['backend', 'frontend']

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd ${{ matrix.directory }}
        npm install

    - name: Run unit tests
      run: |
        cd ${{ matrix.directory }}
        npm test
      continue-on-error: true

    - name: Generate coverage report
      run: |
        cd ${{ matrix.directory }}
        npm run coverage

    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: ${{ matrix.directory }}/coverage/

    - name: Check for lower coverage
      run: |
        cd ${{ matrix.directory }}
        if [ -f coverage/coverage-summary.json ]; then
          PREVIOUS_COVERAGE=$(cat coverage/coverage-summary.json | jq .total.lines.pct)
        else
          echo "No previous coverage report found. Skipping coverage check."
          exit 0
        fi

        if [ -f new-coverage/coverage-summary.json ]; then
          CURRENT_COVERAGE=$(cat new-coverage/coverage-summary.json | jq .total.lines.pct)
        else
          echo "No new coverage report found. Skipping coverage check."
          exit 0
        fi

        if (( $(echo "$CURRENT_COVERAGE < $PREVIOUS_COVERAGE" | bc -l) )); then
          echo "Coverage decreased. Failing the job."
          exit 1

    - name: Create a pull request for formatting changes
      if: env.files_need_formatting == 'true'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git checkout -b format-changes
        git add .
        git commit -m "Apply code formatting"
        git push origin format-changes
        gh pr create --title "Apply code formatting" --body "This PR applies automatic code formatting." --base main --head format-changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Suggest improvements
      run: |
        cd ${{ matrix.directory }}
        curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Content-Type: application/json" \
        -d '{"body":"Please review the following suggestions for improvement."}' \
        "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments"
